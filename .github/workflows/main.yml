# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: repo
        run: echo '${{ github.repository }}'
      
      - name: dingding
        run:  |
             curl '${{ secrets.DINGTALK_WEBHOOK}}' \
             -H 'Content-Type: application/json' \
             -d '{"msgtype": "text","text": {"content":"DevOps, 是不一样的烟火"}}'


      
      - name: c
        run: cd abc
      
      - uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{secrets.ACCESS_TOKEN}}
              
      - name: ls
        run: |
             cd keystore
             ls
             
      - name: Setup Java JDK
        uses: actions/setup-java@v2.2.0
        with:
          java-version: 18
          distribution: 'temurin'
          
      - name: Build release APK
        run: bash ./gradlew assembleRelease --stacktrace

      - name: Get APK Name
        id: getfilename
        run: |
            cd app/build/outputs/apk/release/
            echo "::set-output name=apk_filename::$(ls -r *.apk | head -n 1)"
            
      - name: Log Apk Name
        run: echo "The apk is ${{ steps.getfilename.outputs.apk_filename}}"

        
      - name: Setup Ossutil
        uses: manyuanrong/setup-ossutil@v2.0
        with:
          # 填写Bucket所在地域的域名信息，可参考访问域名和数据中心。
          endpoint: oss-cn-shanghai.aliyuncs.com	
          # AccessKey I
          access-key-id: ${{secrets.RELEASE_BUCKET_ACCESSKEYID}}
          # AccessKeySceret
          access-key-secret:  ${{secrets.RELEASE_BUCKET_ACCESSKEYSECRET}}
      - run: ossutil cp -rf app/build/outputs/apk/release/${{steps.getfilename.outputs.apk_filename}} oss://troncell-releases/AppPod/Android/
      
      - name: message
        run: echo '[AppPod Relasess](https://releases.sensingstore.com/AppPod/Android/${{steps.getfilename.outputs.apk_filename}})'
      
      - name: The job has failed
        if: ${{ failure() }}
        run:  |
             curl '${{ secrets.DINGTALK_WEBHOOK}}' \
             -H 'Content-Type: application/json' \
             -d '{"msgtype": "text","text": {"content":"DevOps, ${{ github.repository }} Failed"}}'
        
